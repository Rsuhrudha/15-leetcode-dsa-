15 3Sum
Statement:-
Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.
Notice that the solution set must not contain duplicate triplets.
Example 1:
Input: nums = [-1,0,1,2,-1,-4]
Output: [[-1,-1,2],[-1,0,1]]
Explanation: 
nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.
nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.
nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.
The distinct triplets are [-1,0,1] and [-1,-1,2].
Notice that the order of the output and the order of the triplets does not matter.
code:-
def function(l):
    if len(l)<3:
        return []
    else:
        l.sort()
        n=len(l)
        for i in range(n-2):
            if i>0 and l[i]==l[i-1]:
                break
            left=i+1
            right=len(l)-1
            while(left<right):
                s=l[i]+l[left]+l[right]
                if s==0:
                    l1.append([l[i],l[left],l[right]])
                    while left<right and l[left]==l[left+1]:
                        left=left+1
                    while left<right and l[right]==l[right-1]:
                        right=right-1
                    left+=1
                    right-=1
                elif s<0:
                    left=left+1
                else:
                    right=right-1
        return l1
l=list(map(int,input().split(",")))
l1=[]
print(function(l,l1))
